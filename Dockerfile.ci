# CI Tools Docker Image for Buildkite Plugin Testing
# This image contains all the tools needed to run our CI pipeline

FROM buildkite/agent:3

# Install system dependencies
USER root
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-yaml \
    bash \
    curl \
    wget \
    git \
    jq \
    && rm -rf /var/lib/apt/lists/*

# Install ShellCheck (architecture-aware)
RUN ARCH=$(dpkg --print-architecture) \
    && if [ "$ARCH" = "amd64" ]; then SHELLCHECK_ARCH="x86_64"; elif [ "$ARCH" = "arm64" ]; then SHELLCHECK_ARCH="aarch64"; else echo "Unsupported architecture: $ARCH" && exit 1; fi \
    && wget -qO- "https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.${SHELLCHECK_ARCH}.tar.xz" | tar -xJv \
    && cp "shellcheck-stable/shellcheck" /usr/bin/ \
    && rm -rf shellcheck-stable

# Install BATS (Bash Automated Testing System)
RUN git clone https://github.com/bats-core/bats-core.git /tmp/bats-core \
    && cd /tmp/bats-core \
    && ./install.sh /usr/local \
    && rm -rf /tmp/bats-core

# Install bats-support and bats-assert for better test functionality
RUN git clone https://github.com/bats-core/bats-support.git /usr/local/lib/bats-support \
    && git clone https://github.com/bats-core/bats-assert.git /usr/local/lib/bats-assert

# Install Buildkite Plugin Linter (architecture-aware)
RUN ARCH=$(dpkg --print-architecture) \
    && if [ "$ARCH" = "amd64" ]; then LINTER_ARCH="amd64"; elif [ "$ARCH" = "arm64" ]; then LINTER_ARCH="arm64"; else echo "Unsupported architecture: $ARCH" && exit 1; fi \
    && curl -Lf -o /usr/local/bin/buildkite-plugin-linter \
    "https://github.com/buildkite-plugins/buildkite-plugin-linter/releases/latest/download/buildkite-plugin-linter-linux-${LINTER_ARCH}" \
    && chmod +x /usr/local/bin/buildkite-plugin-linter

# Install yamllint for additional YAML validation
RUN pip3 install yamllint

# Create a non-root user for running builds
RUN useradd -m -s /bin/bash buildkite-ci
USER buildkite-ci

# Set working directory
WORKDIR /workspace

# Default command
CMD ["/bin/bash"]